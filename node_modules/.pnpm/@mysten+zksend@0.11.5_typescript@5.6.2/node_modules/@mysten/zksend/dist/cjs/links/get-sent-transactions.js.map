{
  "version": 3,
  "sources": ["../../../src/links/get-sent-transactions.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { getFullnodeUrl, SuiClient } from '@mysten/sui/client';\nimport { normalizeSuiAddress } from '@mysten/sui/utils';\n\nimport { ZkSendLink } from './claim.js';\nimport { getContractIds } from './zk-bag.js';\nimport type { ZkBagContractOptions } from './zk-bag.js';\n\nexport async function getSentTransactionsWithLinks({\n\taddress,\n\tcursor,\n\tlimit = 10,\n\tnetwork = 'mainnet',\n\tcontract = getContractIds(network),\n\tclient = new SuiClient({ url: getFullnodeUrl(network) }),\n\tloadClaimedAssets = false,\n\t...linkOptions\n}: {\n\taddress: string;\n\tcontract?: ZkBagContractOptions;\n\tcursor?: string;\n\tlimit?: number;\n\tnetwork?: 'mainnet' | 'testnet';\n\tloadClaimedAssets?: boolean;\n\n\t// Link options:\n\thost?: string;\n\tpath?: string;\n\tclaimApi?: string;\n\tclient?: SuiClient;\n}) {\n\tconst packageId = normalizeSuiAddress(contract.packageId);\n\n\tconst page = await client.queryTransactionBlocks({\n\t\tfilter: {\n\t\t\tFromAddress: address,\n\t\t},\n\t\torder: 'descending',\n\t\tcursor,\n\t\tlimit,\n\t\toptions: {\n\t\t\tshowInput: true,\n\t\t\tshowObjectChanges: true,\n\t\t\tshowBalanceChanges: true,\n\t\t},\n\t});\n\n\tconst data = await Promise.all(\n\t\tpage.data.map(async (res) => {\n\t\t\tconst transaction = res.transaction?.data.transaction;\n\t\t\tif (transaction?.kind !== 'ProgrammableTransaction') {\n\t\t\t\tthrow new Error('Invalid transaction');\n\t\t\t}\n\n\t\t\tconst newLinks = await Promise.all(\n\t\t\t\ttransaction.transactions\n\t\t\t\t\t.filter((tx) =>\n\t\t\t\t\t\t'MoveCall' in tx\n\t\t\t\t\t\t\t? tx.MoveCall.package === packageId &&\n\t\t\t\t\t\t\t\ttx.MoveCall.module === 'zk_bag' &&\n\t\t\t\t\t\t\t\ttx.MoveCall.function === 'new'\n\t\t\t\t\t\t\t: false,\n\t\t\t\t\t)\n\t\t\t\t\t.map(async (tx) => {\n\t\t\t\t\t\tif (!('MoveCall' in tx)) {\n\t\t\t\t\t\t\tthrow new Error('Expected MoveCall');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst addressArg = tx.MoveCall.arguments?.[1];\n\n\t\t\t\t\t\tif (!addressArg || typeof addressArg !== 'object' || !('Input' in addressArg)) {\n\t\t\t\t\t\t\tthrow new Error('Invalid address argument');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst input = transaction.inputs[addressArg.Input];\n\n\t\t\t\t\t\tif (input.type !== 'pure') {\n\t\t\t\t\t\t\tthrow new Error('Expected Address input to be a Pure value');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst address = normalizeSuiAddress(input.value as string);\n\n\t\t\t\t\t\tconst link = new ZkSendLink({\n\t\t\t\t\t\t\tnetwork,\n\t\t\t\t\t\t\taddress,\n\t\t\t\t\t\t\tcontract,\n\t\t\t\t\t\t\tisContractLink: true,\n\t\t\t\t\t\t\t...linkOptions,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait link.loadAssets({\n\t\t\t\t\t\t\ttransaction: res,\n\t\t\t\t\t\t\tloadClaimedAssets,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn link;\n\t\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst regeneratedLinks = await Promise.all(\n\t\t\t\ttransaction.transactions\n\t\t\t\t\t.filter((tx) =>\n\t\t\t\t\t\t'MoveCall' in tx\n\t\t\t\t\t\t\t? tx.MoveCall.package === packageId &&\n\t\t\t\t\t\t\t\ttx.MoveCall.module === 'zk_bag' &&\n\t\t\t\t\t\t\t\ttx.MoveCall.function === 'update_receiver'\n\t\t\t\t\t\t\t: false,\n\t\t\t\t\t)\n\t\t\t\t\t.map(async (tx) => {\n\t\t\t\t\t\tif (!('MoveCall' in tx)) {\n\t\t\t\t\t\t\tthrow new Error('Expected MoveCall');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst addressArg = tx.MoveCall.arguments?.[2];\n\n\t\t\t\t\t\tif (!addressArg || typeof addressArg !== 'object' || !('Input' in addressArg)) {\n\t\t\t\t\t\t\tthrow new Error('Invalid address argument');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst input = transaction.inputs[addressArg.Input];\n\n\t\t\t\t\t\tif (input.type !== 'pure') {\n\t\t\t\t\t\t\tthrow new Error('Expected Address input to be a Pure value');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst address = normalizeSuiAddress(input.value as string);\n\n\t\t\t\t\t\tconst link = new ZkSendLink({\n\t\t\t\t\t\t\tnetwork,\n\t\t\t\t\t\t\taddress,\n\t\t\t\t\t\t\tcontract,\n\t\t\t\t\t\t\tisContractLink: true,\n\t\t\t\t\t\t\t...linkOptions,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait link.loadAssets({ loadClaimedAssets });\n\n\t\t\t\t\t\treturn link;\n\t\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\ttransaction: res,\n\t\t\t\tlinks: [...newLinks, ...regeneratedLinks],\n\t\t\t};\n\t\t}),\n\t);\n\n\treturn {\n\t\tdata,\n\t\tnextCursor: page.nextCursor,\n\t\thasNextPage: page.hasNextPage,\n\t};\n}\n"],
  "mappings": "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",
  "names": ["address"]
}
